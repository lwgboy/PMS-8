<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ike.pms.mybatisplus.mybaitsplusdemo.dao.TestMapper">

    <resultMap id="BaseResultMap" type="org.ike.pms.mybatisplus.mybaitsplusdemo.entity.TUser">
        <id column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
    </resultMap>

    <select id="listWithTable" resultMap="BaseResultMap">
        select * from ${table}
        <if test="_parameter.containsKey('ew') and ew.customSqlSegment!=null">
            ${ew.customSqlSegment}
        </if>
    </select>

    <insert id="saveWithTable" >
        insert into ${table} values(#{obj.userId},#{obj.userName},#{obj.password},#{obj.phone},#{obj.age})
    </insert>

    <insert id="saveBatchWithTable" >
        insert into ${table} values
        <foreach item="item" collection="coll" separator=",">
            (#{item.userId},#{item.userName},#{item.password},#{item.phone},#{item.age})
        </foreach>
    </insert>

    <delete id="removeByIdWithTable">
        delete from ${table} where user_id=#{id}
    </delete>

    <delete id="removeByIdsWithTable">
        delete from ${table} where user_id in
        <foreach item="item" collection="coll" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="removeWithTable">
        delete from ${table}
        <if test="_parameter.containsKey('ew') and ew.customSqlSegment!=null">
            ${ew.customSqlSegment}
        </if>
    </delete>

    <update id="updateWithTable">
        update ${table}
        <set>
            <if test="obj.userId!=null">
                user_id=#{obj.userId},
            </if>
            <if test="obj.userName!=null">
                user_name=#{obj.userName},
            </if>
            <if test="obj.password!=null">
                password=#{obj.password},
            </if>
            <if test="obj.phone!=null">
                phone=#{obj.phone},
            </if>
            <if test="obj.age!=null">
                age=#{obj.age},
            </if>
        </set>
        <choose>
            <when test="_parameter.containsKey('ew') and ew.customSqlSegment!=null">
                ${ew.customSqlSegment}
            </when>
            <otherwise>
                where user_id=#{obj.userId}
            </otherwise>
        </choose>

    </update>

    <update id="updateBatchByIdWithTable">
        <foreach item="item" collection="coll" separator=";" close=";">
            update ${table}
            <set>
                <if test="item.userId!=null">
                    user_id=#{item.userId},
                </if>
                <if test="item.userName!=null">
                    user_name=#{item.userName},
                </if>
                <if test="item.password!=null">
                    password=#{item.password},
                </if>
                <if test="item.phone!=null">
                    phone=#{item.phone},
                </if>
                <if test="item.age!=null">
                    age=#{item.age},
                </if>
            </set>
            where user_id=#{item.userId}
        </foreach>
    </update>

    <insert id="saveOrUpdateWithTable">
        insert into ${table} values
        (#{obj.userId},#{obj.userName},#{obj.password},#{obj.phone},#{obj.age})
        on duplicate key update
        <trim prefix="" suffixOverrides=",">
            <if test="obj.userId!=null">
                user_id =values(user_id),
            </if>
            <if test="obj.userName!=null">
                user_name =values(user_name),
            </if>
            <if test="obj.password!=null">
                password =values(password),
            </if>
            <if test="obj.phone!=null">
                phone =values(phone),
            </if>
            <if test="obj.age!=null">
                age =values(age),
            </if>
        </trim>
    </insert>

    <insert id="saveOrUpdateBatchWithTable">
        <foreach collection="coll" item="item" index="index" separator=";">
            insert into ${table} values
            (#{item.userId},#{item.userName},#{item.password},#{item.phone},#{item.age})
            on duplicate key update
            <trim prefix="" suffixOverrides=",">
                <if test="item.userId!=null">
                    user_id =values(user_id),
                </if>
                <if test="item.userName!=null">
                    user_name =values(user_name),
                </if>
                <if test="item.password!=null">
                    password =values(password),
                </if>
                <if test="item.phone!=null">
                    phone =values(phone),
                </if>
                <if test="item.age!=null">
                    age =values(age),
                </if>
            </trim>
        </foreach>
    </insert>
</mapper>